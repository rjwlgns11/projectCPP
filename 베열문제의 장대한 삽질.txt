00  10  20
01  11  21 
02  12  22
이러면 어케 들어가야함?

아이가 증가하면 값을 출력해야하는데 I++이 되었을경우

간단 요약
출력에서 j와 i를 바꿔주면 간단해결
왜?
for문에서 증가하는것은 j다 그럼 j먼저 출력하면 간단하잖슴?
이 문제를 시발 한시간을 쳐잡고있네 개멍청이 빡대가리

짝수인 경우는 정상적으로 i값이 증가하면됨 
이게 반대로 말하면 짝수가 아니면 i값이 증가하면 안된다는 소린디

00 01 02 i==0 1 2     value=1; ss
12 11 10 j==2 1 0   value=2; dd
20 21 22              value=3 ss
나오는 경우의 수는 2개인데
2번째 루프의 10은 사용이 안됨 왜? 변수를 조건문에 가따 박아놔서 

짝수인경우(if i%2==0) 정상적으로 i값이 증가하면됨(i++)
이말인즉 짝수가 아니면(else) j값을 증가시키면 된단 소리임(j++)
for(int i=0; i<3; i++)
{
   if(i%2==0) 
      for(int j=0; j<3;j++)//이 식은 역주행을 위한 식이어야한다
  {
    printf("%d", arr[i][j])
  }
 else
     {
       for(int j=0;j<3; j++)
         {
                 printf("%d",arr[i][j])
         }
     }
}

for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			arrays[j][i] = value++;//아무튼 변수값이 바뀌어야되는건
 					//팩트
		}
	}


#include "Header.h"
int main()
{
	int arr[3][3] = {
		{1,2,3},
		{4,5,6},
		{7,8,9}
	};
	int value=1;

//1번문제 배열이 i,j라고 했을때
//j 가 아닌 i의 값이 증가하면 값이 증가하는 로직
//i값을 증가시키면서 출력을 진행한다?
//
	//for (int i = 0; i < 3; i++)
	//{
	//    
	//	for (int j = 0; j<3; j++)
	//	{
	//		
	//		//2를 아래로 내려야해요~
	//		//내리려면 어캐할까요?
	//		//밸류를 증가시켜볼까요?
	//	    //여기서 i는 증가하면 안돼요~
	//		 arr[j][i]=value++;//뭐여 시벌
	//		//왜인가
	//		//i의 값은 우선 증가하면 안됨
	//		//근데 이 for문에서 증가하고있는건
	//		//j값임
	//		//그럼 반대로 해주면?
	//		//???
	//		//profit!
	//		//요약 내릴땐 변수를 역순으로 바꿔주면 된다
	// 
	//	}
	//	printf("\n");
	//	
	//}
	//2번문제
	//짝수인경우는 정상적으로 i값이 증가하면됨
	//i의 값이 홀수인경우인경우에는 뒤에서부터 값이 증가하는 방식


	//value = 1;
	//for (int i = 0; i < 3; i++)
	//{
	//	if (i % 2 == 0)
	//	{
	//		for (int j = 0; j < 3; j++)
	//		{
	//			arr[i][j] = value++;//변수증가로 표현하는 인덱스 내부값
	//		}//00 01 01  1 2 3
	//		 //20 21 22  7 8 9
	//	}
	//	else
	//	{
	//		for (int j = 2; j >= 0; j--)
	//		{
	//			arr[i][j] = value++; //12 11 10
	//		}                        //4  5  6
	//	}
	//}









 //   for (int i = 0; i < 3; i++)
	//{
	//		if (i % 2 == 0)//0도 짝수....시발...
	//		{
	//			for (int j = 0; j < 3; j++)
	//			{
	//					arr[i][j] = value++;
	//			}
	//		}
	//		else
	//		{
	//			for (int j = 2; j >= 0; j--)
	//			{
	//				arr[i][j] = value++;
	//			}
	//		}
	//
	//}

	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			printf("%d ", arr[i][j]);
		}
		printf("\n");
	}

	return 0;

}


============================================================



//#include "Header.h"
//int main()
//{
//	int arr[3][3] = {
//		{0,0,0},
//		{0,0,0},
//		{0,0,0}
//	};
//
//	int value=1;
//	int i=0, j=0;
//
//	for (i; i <= 3; i++)
//	{
//		if (i == 0) {// 일단 1열 초기화
//			for (j = 0; j < 3; j++)
//			{
//				arr[i][j] = value++;//00 01 02 초기화
//			}
//		}
//		else if (i == 1&&j==3)//2행 초기화
//		{
//			
//			for (j = 2; i <=2; i++)//12 22 초기화
//			{
//				
//				arr[i][j] = value++;
//
//			}
//			i=1;//i값을 만졌으니 i값을 초기화해준다. 
//			
//		}
//		else if (i == 2&&j==2)//2열 초기화
//		{
//			for (j = 1; j >= 0; j--)//21 20 초기화
//			{
//				arr[i][j] = value++;
//			}
//			j=0;//마지막인데....대체 어떻게 하지
//			
//		}
//		else if (j == 0)
//		{
//			i = 1;
//			for (j; j< 2; j++)//10 11 초기화
//			{
//				arr[i][j] = value++;
//			}
//			i = 3;
//		}
//		
//	}
//	
//
//
//	for (int i = 0; i < 3; i++)
//	{
//		for (int j = 0; j < 3; j++)
//		{
//			printf("%d ", arr[i][j]);
//		}
//		printf("\n");
//	}
//
//	return 0;
//
//}
